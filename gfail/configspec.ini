[logistic_models]

  # default_landslide and default_liquefaction parameters below must refer to
  # named models in this file
  default_landslide = string
  default_liquefaction = string

  # the subsection name must be a unique and descriptive name of a logistic
  # regression model.
  [[__many__]]

    # Detailed description of the model, its inputs, etc.
    description = string

    # which type of ground failure model is this? Options are landslide or
    # liquefaction.
    gfetype = option('landslide','liquefaction')

    # what is the grid to which all other grids in this model will be resampled?
    baselayer = string
    
    # these layer files can be any Grid2D-subclass supported format
    # These include, but may not be limited to:
    # https://github.com/usgs/MapIO/blob/master/mapio/gdal.py
    # https://github.com/usgs/MapIO/blob/master/mapio/gmt.py
    # OR
    # A layer can point to a directory containing 12 data files (from above
    # format list), one for each month.
    # The input event time will be used to choose the appropriate file from
    # the list of 12.
    # The files MUST be named with the capitalized three-letter abbreviation
    # of the month name, like "precip_Jan.grd", or "slope_May.grd".
    # If some files contain more than one of these three-letter abbreviations,
    # you will get unexpected results. (i.e., "DecimatedSlope_Jan.grd")
    [[[layers]]]
      __many__ = path_type
      
      
    # What are the physical units of the various predictive layers?  These
    # will be displayed on output plots and preserved in the output data files. 
    [[[units]]]
      __many__ = string

    [[[terms]]]
      # These terms must be named as b1-bN, where N is the number of
      # coefficients in a logistic regression, which takes the form:
      # 1/(1 + e^-eqn)
      # where eqn is a linear equation of the form:
      # b0 + b1*t1 + b2*t2 + ... + bN*tN
      # where t1, t2, ... tN are the right hand side of the parameters below.
      __many__ = string
      

    [[[coefficients]]]
      # These coefficients must be named as b1-bN, where N is the number of
      # coefficients in a logistic regression, which takes the form:
      # 1/(1 + e^-eqn)
      # where eqn is a linear equation of the form:
      # b0 + b1*t1 + b2*t2 + ... + bN*tN
      # where t1, t2, ... tN are the right hand side of the parameters below.
      __many__ = float

    # indicate what kind of interpolation should be used for each of the above
    # layers (nearest, linear, cubic)
    [[[interpolations]]]
      # These are the desired interpolation options for each layer
      __many__ = option('nearest','linear','cubic')
        
      
    # colormaps are optionally specified for each input layer
    # the groundfailure code will make a map of each input layer, and will use 
    # the default Matplotlib color map unless otherwise specified here.      
    [[[colormaps]]]
      __many__ = string

      
    